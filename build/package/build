#!/bin/bash

set -e -u -x

ORIGINAL_ROOT_DIR="$(dirname $(dirname $(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)))"
TMP_ROOT_DIR=/tmp/api-umbrella
TMP_WORK_DIR=$TMP_ROOT_DIR/build/work

if [ ! -f /etc/yum.repos.d/wandisco-git.repo ]; then
  yum -y install http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm
fi

# Install system dependencies onto the build system.
yum -y install \
  bzip2 \
  gcc \
  gcc-c++ \
  git \
  libffi-devel \
  libuuid-devel \
  libxml2-devel \
  libyaml-devel \
  ncurses-devel \
  openssl-devel \
  patch \
  pcre-devel \
  rpm-build \
  tar \
  tcl-devel \
  unzip \
  xz

# Copy the current api-umbrella code-base to a separate, temporary location.
# This temporary location will be used for performing the packaging. We use a
# separate location so that multiple docker build containers don't conflict
# with the original working copy.
rsync -av --exclude="build/work" --exclude=".git" --filter=":- $ORIGINAL_ROOT_DIR/.gitignore" --no-links --delete-after $ORIGINAL_ROOT_DIR/ $TMP_ROOT_DIR/

# Build and install from the temporary working copy, installing into a
# temporary root used for packaging.
cd $TMP_ROOT_DIR
make install DESTDIR=$TMP_WORK_DIR/package/root

# Define dependencies for the api-umbrella package.
DEPENDENCIES=(
  # General
  bash
  glibc
  libffi
  libyaml
  ncurses-libs
  openssl
  pcre
  zlib

  # lua-resty-uuid requires "libuuid.so", so we have to instal the -devel
  # package (libuuid provides "libuuid.so.1").
  libuuid-devel

  # TrafficServer
  libxml2
  tcl

  # ElasticSearch
  java-1.8.0-openjdk
  # For getopt, should no longer be necessary in ElasticSearch 2:
  # https://github.com/elastic/elasticsearch/pull/12165
  util-linux-ng
  which
)
DEPENDENCIES_ARGS=""
for DEP in "${DEPENDENCIES[@]}"; do
  DEPENDENCIES_ARGS="$DEPENDENCIES_ARGS -d $DEP"
done

# Use FPM to build the binary package.
cd $TMP_ROOT_DIR/build/package
rm -f *.rpm
PATH=$TMP_WORK_DIR/stage/opt/api-umbrella/embedded/bin:$PATH bundle install --path=$TMP_WORK_DIR/package/bundle
PATH=$TMP_WORK_DIR/stage/opt/api-umbrella/embedded/bin:$PATH bundle exec fpm \
		-s dir \
		-t rpm \
		-n api-umbrella \
		-v 0.9.0 \
		--rpm-compression xz \
		-C $TMP_WORK_DIR/package/root \
		-p api-umbrella_VERSION_ARCH.rpm \
    $DEPENDENCIES_ARGS \
		--config-files etc/api-umbrella/api-umbrella.yml \
    --after-install ./scripts/after-install \
    --before-remove ./scripts/after-remove \
    --after-remove ./scripts/after-remove \
		.

cp *.rpm $ORIGINAL_ROOT_DIR/build/package/
