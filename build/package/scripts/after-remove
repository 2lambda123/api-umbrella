#!/bin/bash

set -e -u

REMOVE_ACCOUNTS=false
REMOVE_DATA=false
REMOVE_FILES=false
REMOVE_SERVICE=false
RESTART_SERVICE=false

case "$1" in
  # dpkg
  remove)
    REMOVE_FILES=true
    REMOVE_SERVICE=true
    ;;
  purge)
    REMOVE_ACCOUNTS=true
    REMOVE_DATA=true
    ;;
  abort-install|abort-upgrade|disappear|failed-upgrade|upgrade)
    ;;

  # rpm
  0) # uninstall
    REMOVE_FILES=true
    ;;
  1) # upgrade
    RESTART_SERVICE=true
    ;;
esac

if [ "$REMOVE_FILES" = "true" ]; then
  rm -f /usr/bin/api-umbrella /var/log/api-umbrella
  rmdir /etc/api-umbrella > /dev/null 2>&1 || true # Delete directory if empty.
fi

if [ "$REMOVE_SERVICE" = "true" ]; then
  if command -v update-rc.d > /dev/null 2>&1; then
    update-rc.d api-umbrella remove > /dev/null
  fi
fi

if [ "$REMOVE_DATA" = "true" ]; then
  rm -rf /etc/api-umbrella /opt/api-umbrella
fi

if [ "$REMOVE_ACCOUNTS" = "true" ]; then
  USER=api-umbrella
  GROUP=api-umbrella
  DEPLOY_USER=api-umbrella-deploy
  DEPLOY_GROUP=api-umbrella-deploy

  if getent passwd $DEPLOY_USER > /dev/null; then
    userdel $DEPLOY_USER
  fi

  if getent passwd $USER > /dev/null; then
    userdel $USER
  fi

  if getent group $DEPLOY_GROUP > /dev/null; then
    groupdel $DEPLOY_GROUP
  fi

  if getent group $GROUP > /dev/null; then
    groupdel $GROUP
  fi
fi

if [ "$RESTART_SERVICE" = "true" ]; then
  # On upgrades, restart the service if it's currently running.
  /etc/init.d/api-umbrella condrestart
fi
