frontend api_router 127.0.0.1:50100
  # Custom log format - Like default HTTP log, but includes bytes_uploaded (%U)
  # and unique-id (%ID).
  log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %U\ %CC\ \ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %ID\ %hr\ %hs\ %{+Q}r

  # Capture the existing unique ID header (assigned in the web_router frontend)
  # for use in the log file.
  capture request header X-ApiUmbrella-UID len 100

  # Strip the uniuqe ID header before sending the request onto the real
  # destination (the unique ID is only for internal use).
  reqidel ^X-ApiUmbrella-UID:.*

  # Strip /api/ from the beginning of the request URL before matching the
  # request to a backend. This is to normalize for backwards compatibility when
  # all APIs used to have to begin with /api/.
  #
  # Turns a request from "GET /api/something" to "GET /something"
  reqirep ^([^\ ]*)\ /api(/.*) \1\ \2

  # developer.nrel.gov - The public facing developer.nrel.gov site has services
  # of its own for things like account signup.
  acl url_match_api_developer_site path_beg -i -f <%= File.join(latest_release, "config/haproxy/api_router_matches/api_developer_site.lst") %>
  use_backend developer_site_farm if url_match_api_developer_site

  # Insert your own...

  # FIXME: GSA TEMPORARY DEMO: FCC's Broadband Map
  acl url_match_api_broadbandmap path_beg -i -f <%= File.join(latest_release, "config/haproxy/api_router_matches/api_broadbandmap.lst") %>
  use_backend api_broadbandmap_farm if url_match_api_broadbandmap

  # FIXME: GSA TEMPORARY DEMO: NREL
  acl url_match_api_nrel path_beg -i -f <%= File.join(latest_release, "config/haproxy/api_router_matches/api_nrel.lst") %>
  use_backend api_nrel_farm if url_match_api_nrel

  # FIXME: GSA TEMPORARY DEMO: Census
  acl url_match_api_census path_beg -i -f <%= File.join(latest_release, "config/haproxy/api_router_matches/api_census.lst") %>
  use_backend api_census_farm if url_match_api_census

  # FIXME: GSA TEMPORARY DEMO: MyUSA
  acl url_match_api_myusa_discovery path_beg -i -f <%= File.join(latest_release, "config/haproxy/api_router_matches/api_myusa_discovery.lst") %>
  use_backend api_myusa_discovery_farm if url_match_api_myusa_discovery
