[program:<%= deploy_name %>-gatekeeper]
; Run 4 gatekeeper instances.
numprocs=4

; Start each Gatekeeper instance with ports starting at 50000.
; Execute Gatekeeper via RVM and Bundler. 
directory=<%=current_path %>
environment=PATH=/opt/rbenv/shims:/opt/rbenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
command=/opt/rbenv/shims/bundle exec api_umbrella_gatekeeper --host 127.0.0.1 --port 50%(process_num)03d --environment <%= rails_env %> --mongoid-config <%= current_path %>/config/mongoid.yml --redis-config <%= current_path %>/config/redis.yml

; Name each process by the port number, eg "gatekeeper-50000",
; "gatekeeper-50001"
process_name=%(program_name)s-50%(process_num)03d

; Always keep running.
autostart=true
autorestart=true

; It can take longer for the the proxy to fully startup, so set a longer
; startup time.
startsecs=10

; Graceful shutdown, remaining open `stopwaitsecs` seconds for open connections
; to disconnect.
stopsignal=QUIT

; Eventually we have to kill off any open connections so we can restart, but
; we'll give them quite a while.
stopwaitsecs=90

; Run as the web user.
user=www-data-local

; Log both stdout and stderr to the same log file. One log file per
; Gatekeeper instance running on each port.
redirect_stderr=true
stdout_logfile=<%= current_path %>/log/%(program_name)s-50%(process_num)03d.log

; Don't rotate based on file size. We'll rotate externally using logrotate.
logfile_maxbytes=0

; Define a group so everything in this deployment can be controlled together.
[group:<%= deploy_name %>]
programs=<%= deploy_name %>-gatekeeper
