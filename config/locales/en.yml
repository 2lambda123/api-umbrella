en:
  breadcrumb_divider: "&raquo;"
  omniauth_providers:
    cas: MAX.gov
    developer: dummy login (development only)
    facebook: Facebook
    github: GitHub
    google_oauth2: Google
    myusa: MyUSA
    persona: Persona
  errors:
    messages:
      invalid_host_format: must be in the format of "example.com"
      invalid_url_prefix_format: must start with "/"
      admin_not_authorized: |-
        You are not authorized to perform this action. You are only authorized to perform actions for APIs in the following areas:

        %{authorized_scopes_list}

        Contact your API Umbrella administrator if you need access to new APIs.
  mongoid:
    attributes:
      api:
        backend_host: Backend Host
        backend_protocol: Backend Protocol
        frontend_host: Frontend Host
        name: Name
      api/server:
        host: Backend server host
        port: Port
      api/settings:
        append_query_string: Append Query String Parameters
        http_basic_auth: Set Headers
        require_https: HTTPS Requirements
        disable_api_key: API Key Checks
        allowed_ips: Restrict Access to IPs
        allowed_referers: Restrict Access to HTTP Referers
        rate_limit_mode: Rate Limit
        anonymous_rate_limit_behavior:
        authenticated_rate_limit_behavior:
        pass_api_key_header:
        pass_api_key_query_param:
        error_templates: Error Templates
        error_data: Error Data
      api/url_match:
        backend_prefix: Backend Prefix
        frontend_prefix: Frontend Prefix
  admin:
    errors:
      host_format: Must be in the format of "example.com"
    edit: Edit
    remove: Remove
    reorder: Reorder
    check_all: Check all
    uncheck_all: Uncheck all
    nav:
      admin_accounts: Admin Accounts
      admin_groups: Admin Groups
      analytics: Analytics
      api_backends: API Backends
      api_drilldown: API Drilldown
      api_scopes: API Scopes
      api_users: API Users
      by_location: By Location
      by_users: By Users
      configuration: Configuration
      dashboard: Dashboard
      filter_logs: Filter Logs
      import_export: Import/Export
      logout: Logout
      my_account: My Account
      permissions_management: Permissions Management
      publish_changes: Publish Changes
      users: Users
      website_backends: Website Backends
    api:
      servers:
        legend: Backend
        server: Server
        note: Define the server where the API is hosted. Multiple servers can be defined to perform load balancing.
        empty_list: No backend servers have been added yet. Click "%{add}" below to get started.
        add: Add Server
      host:
        legend: Host
        note: Define the host that we will listen for, and then the host the API backend is listening for.
      url_matches:
        legend: Matching URL Prefixes
        note: What URL prefixes should be routed to this backend?
        empty_list: No URL prefix matches have been added yet. Click "%{add}" below to get started.
        add: Add URL Prefix
      rewrites:
        legend: Advanced Requests Rewriting
        note: Modify the incoming request's URL or headers before passing it to the backend.
        empty_list: No request rewrites have been added yet. Click "%{add}" below to get started.
        add: Add Rewrite
      settings:
        require_https: HTTPS Requirements
        require_https_tooltip_markdown: |-
          Choose whether HTTPS is required to access this API. HTTPS is encouraged to protect the API keys.

          - **Required & return message:** HTTPS is required to access the API. HTTP requests will return an error message instructing the user to use an HTTPS URL instead. This is the recommended and default strategy.
          - **Required & return redirect:** HTTPS is required to access the API. HTTP requests will return a redirect to the HTTPS URL.
          - **Transitionary & return message:** New API keys that signup after choosing this setting will be forced to use HTTPS. Existing API keys may continue to use either HTTP or HTTPS. New API keys using HTTP will return an error message instructing the user to use an HTTPS URL instead.
          - **Transitionary & return redirect:** New API keys that signup after choosing this setting will be forced to use HTTPS. Existing API keys may continue to use either HTTP or HTTPS. New API keys using HTTP will return a redirect to the HTTPS URL.
          - **Optional**: HTTPS is optional and either HTTP or HTTPS may be used.

          *Notes on redirects:*

          - Not all API clients will automatically follow redirects, so be careful if using a redirect strategy for existing APIs (since existing calls may break).
          - If API clients rely on the redirect for HTTPS access, this strategy does not secure the API keys, since the client may still be making an insecure initial HTTP request with their API key.
          - For GET requests a `301 Moved Permanently` redirect will be returned. For all other HTTP methods a `307 Temporary Redirect` redirect will be returned (to instruct the client to retry using the same HTTP method).
        require_https_options:
          inherit: Inherit (default - required & return message)
          required_return_error: Required & return message - HTTP requests will receive a message to use HTTPS
          required_return_redirect: Required & return redirects - HTTP requests will be redirected to HTTPS
          transition_return_error: Transitionary & return message - Optional for existing API keys, required for new API keys
          transition_return_redirect: Transitionary & return redirects - Optional for existing API keys, required for new API keys
          optional: Optional - HTTPS is optional
        disable_api_key_options:
          inherit: Inherit (default - required)
          required: Required - API keys are mandatory
          disabled: Disabled - API keys are optional
      sub_settings:
        legend: Sub-URL Request Settings
        note: Change settings for specific sub-URLs within this API.
    stats:
      filter_results: Filter Results
      filter: Filter
      switch_advanced_filters: Switch to advanced filters
      switch_simple_filters: Switch to simple filters
      advanced_filters_placeholder: Advanced filters...
      advanced_filters_tip: Advanced filters use <a href="#query_syntax_help_content" rel="popover">Lucene's Query Syntax</a>.
      advanced_filters_help_content: Use <a href="http://www.lucenetutorial.com/lucene-query-syntax.html" target="_blank">Lucene's query syntax</a> to perform complex queries.
      available_fields: Available Fields
      field: Field
      example: Example
      minute: Minute
      hour: Hour
      day: Day
      week: Week
      month: Month
      fields:
        request_method:
          label: 'Request: HTTP Method'
          description_markdown: |-
            The HTTP method of the request.
            *Example:* `GET`, `POST`, `PUT`, `DELETE`, etc.
        request_scheme:
          label: 'Request: URL Scheme'
          description_markdown: |-
            The scheme of the original request URL.
            *Example:* `http` or `https`
        request_host:
          label: 'Request: URL Host'
          description_markdown: |-
            The host of the original request URL.
            *Example:* `example.com`
        request_path:
          label: 'Request: URL Path'
          description_markdown: |-
            The path portion of the original request URL.
            *Example:* `/geocode/v1.json`
        request_url:
          label: 'Request: Full URL & Query String'
          description_markdown: |-
            The original, complete request URL.
            *Example:* `http://example.com/geocode/v1.json?address=1617+Cole+Blvd+Golden+CO`
            *Note:* If you want to simply filter on the host or path portion of the URL, your queries will run better if you use the separate "Request: URL Path" or "Request: URL Host" fields.
        request_ip:
          label: 'Request: IP Address'
          description_markdown: |-
            The IP address of the requestor.
            *Example:* `93.184.216.119`
        request_ip_country:
          label: 'Request: IP Country'
          description_markdown: |-
            The 2 letter country code (<a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2" target="_blank">ISO 3166-1</a>) that the IP address geocoded to.
            *Example:* `US`
        request_ip_region:
          label: 'Request: IP State/Region'
          description_markdown: |-
            The 2 letter state or region code (<a href="http://en.wikipedia.org/wiki/ISO_3166-2" target="_blank">ISO 3166-2</a>) that the IP address geocoded to.
            *Example:* `CO`
        request_ip_city:
          label: 'Request: IP City'
          description_markdown: |-
            The name of the city that the IP address geocoded to.
            *Example:* `Golden`
        request_user_agent:
          label: 'Request: User Agent'
          description_markdown: |-
            The user agent of the requestor.
            *Example:* `curl/7.33.0`
        api_key:
          label: 'User: API Key'
          description_markdown: |-
            The API key used to make the request.
            *Example:* `vfcHB9tOyFKc6YbbdDsE8plxtFHvp9zXIJWAtaep`
        user_email:
          label: 'User: E-mail'
          description_markdown: |-
            The e-mail address associated with the API key used to make the request.
            *Example:* `john.doe@example.com`
        user_id:
          label: 'User: ID'
          description_markdown: |-
            The user ID associated with the API key used to make the request.
            *Example:* `ad2d94b6-e0f8-4e26-b1a6-1bc6b12f3d76`
        response_status:
          label: 'Response: HTTP Status Code'
          description_markdown: |-
            The HTTP status code returned for the response.
            *Example:* `200`, `403`, `429`, etc.
        response_time:
          label: 'Response: Load Time'
          description_markdown: |-
            The total amount of time taken to respond to the request (in milliseconds)
        response_content_type:
          label: 'Response: Content Type'
          description_markdown: |-
            The content type of the response.
            *Example:* `application/json; charset=utf-8`
