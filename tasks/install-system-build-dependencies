#!/usr/bin/env bash

set -Eeuxo pipefail
source ./tasks/helpers.sh
source ./tasks/helpers/detect_os_release.sh

# shellcheck source=build/package_dependencies.sh
source "$SOURCE_DIR/build/package_dependencies.sh"

install_dependencies=("${all_build_dependencies[@]}")
if [ "${INSTALL_TEST_DEPENDENCIES:-}" == "true" ]; then
  install_dependencies=("${all_dependencies[@]}")
fi

detect_os_release
if [[ "$ID_NORMALIZED" == "rhel" && "$VERSION_ID" == "7" ]]; then
  # Dependencies for GCC 7+ for compiling TrafficServer (C++17 required).
  yum -y install centos-release-scl

  yum -y install "${install_dependencies[@]}"
  # Ensure the packages got installed, since yum's exit code isn't always
  # useful: http://stackoverflow.com/a/22393088
  rpm --query --queryformat "" "${install_dependencies[@]}"
elif [[ "$ID_NORMALIZED" == "debian" ]]; then
  # Dependencies for GCC 7+ or Clang 5+ for compiling TrafficServer (C++17
  # required).
  if [[ "$ID" == "debian" && "$VERSION_ID" == "9" ]]; then
    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install curl ca-certificates gnupg
    curl -sS https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
    if [[ "$ID" == "debian" && "$VERSION_ID" == "8" ]]; then
      echo "deb http://apt.llvm.org/jessie/ llvm-toolchain-jessie-7 main" > /etc/apt/sources.list.d/api-umbrella-llvm.list
    else
      echo "deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch-7 main" > /etc/apt/sources.list.d/api-umbrella-llvm.list
    fi
  fi

  apt-get update
  DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install "${install_dependencies[@]}"
else
  echo "Unknown build system"
  exit 1
fi

if [ "${INSTALL_TEST_DEPENDENCIES:-}" == "true" ]; then
  if [ "$ID" == "debian" ]; then
    # Add Chrome for integration tests.
    if [ "$TARGETARCH" == "amd64" ]; then
      apt-get update
      DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install ca-certificates curl jq unzip
      curl -fsSL -o /tmp/chrome.json https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json

      # Install Chrome for Testing dependencies:
      # https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-doesnt-launch-on-linux
      DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils

      # Install Chrome for Testing
      chrome_url="$(jq -r '.channels.Stable.downloads.chrome[] | select(.platform == "linux64").url' /tmp/chrome.json)"
      curl -fsSL "$chrome_url" -o "/tmp/chrome.zip"
      unzip -o -j -d /opt/chrome "/tmp/chrome.zip"
      ln -s /opt/chrome/chrome /usr/local/bin/google-chrome
      google-chrome --version
      rm "/tmp/chrome.zip"

      # Install Chromedriver for matching version
      chromedriver_url="$(jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64").url' /tmp/chrome.json)"
      curl -fsSL -o "/tmp/chromedriver.zip" "$chromedriver_url"
      unzip -o -j -d /usr/local/bin "/tmp/chromedriver.zip" "*/chromedriver"
      chromedriver --version
      rm "/tmp/chromedriver.zip"
    else
      # For ARM platforms, Chrome stable doesn't exist, so use Chromium
      # instead. chromedriver also doesn't exist, so use Electron's ARM builds
      # instead.
      CHROMIUM_VERSION="115.*"
      CHROMEDRIVER_VERSION="25.6.0"
      printf "Package: chromium*\nPin: version %s\nPin-Priority: 999\n" "$CHROMIUM_VERSION" > /etc/apt/preferences.d/chromium
      apt-get update
      apt-get -y --no-install-recommends install chromium curl unzip
      chromium --version

      curl -fsSL -o "/tmp/chromedriver-v${CHROMEDRIVER_VERSION}-linux.zip" "https://github.com/electron/electron/releases/download/v${CHROMEDRIVER_VERSION}/chromedriver-v${CHROMEDRIVER_VERSION}-linux-${TARGETARCH}.zip"
      unzip -o -d /usr/local/bin "/tmp/chromedriver-v${CHROMEDRIVER_VERSION}-linux.zip" chromedriver
      chromedriver --version
      rm "/tmp/chromedriver-v${CHROMEDRIVER_VERSION}-linux.zip"
    fi
  fi
fi
