# Strip the header from the request that is only used for cache key generation.
cond %{SEND_REQUEST_HDR_HOOK}
rm-header X-Api-Umbrella-Cache-Request-Method

# If API Umbrella is injecting a static Authorization header into each
# request (to authenticate against the API backend), then we still want to
# allow caching of the responses, even though authorized responses aren't
# normally cached. So we don't actually set the "Authorization" header (to
# allow for caching) and only swap headers when making the actual request.
cond %{SEND_REQUEST_HDR_HOOK}
cond %{CLIENT-HEADER:X-Api-Umbrella-Backend-Authorization} ="" [NOT]
set-header Authorization %{HEADER:X-Api-Umbrella-Backend-Authorization}
rm-header X-Api-Umbrella-Backend-Authorization

# Support a private Surrogate-Control header (taking precedence over the
# normal Cache-Control header) to allow API backends to return this header
# to only control API Umbrella's caching layer, while having different
# Cache-Control settings for public caches.
#
# We support this by shifting the Surrogate-Control header into place as the
# normal Cache-Control header, so Traffic Server will parse the surrogate
# header for all the normal TTL information. We'll then restore the original
# Cache-Control header in do_global_send_response().
cond %{READ_RESPONSE_HDR_HOOK}
cond %{HEADER:Surrogate-Control} ="" [NOT]
set-header X-Api-Umbrella-Orig-Cache-Control %{HEADER:Cache-Control}
set-header Cache-Control %{HEADER:Surrogate-Control}
rm-header Surrogate-Control

# Restore the original Cache-Control header that was potentially shifted to
# a different header to allow Surrogate-Control support in
# do_global_read_response().
cond %{SEND_RESPONSE_HDR_HOOK}
cond %{HEADER:X-Api-Umbrella-Orig-Cache-Control} ="" [NOT]
set-header Cache-Control %{HEADER:X-Api-Umbrella-Orig-Cache-Control}
rm-header X-Api-Umbrella-Orig-Cache-Control

# This could offer an alternative to our Lua set_cache_header() workaround
# (which sets this header based on parsing the "Via" header) in the future once
# these issues are resolved:
# https://github.com/apache/trafficserver/issues/8539
# https://github.com/apache/trafficserver/pull/8545
# https://github.com/apache/trafficserver/pull/8637
#
# Set a simplified "X-Cache: HIT" response header if "hit-fresh" (we'll treat
# "hit-stale" as a "MISS" since it still results in a request to the backend).
# cond %{SEND_RESPONSE_HDR_HOOK}
# cond %{CACHE} ="hit-fresh"
# set-header X-Cache HIT
#
# If the response was not cached and there was not an existing "X-Cache" header
# from the underlying server response, then set a simplified "X-Cache: MISS"
# response header for any other situation (miss, hit-stale, skipped, or none).
# cond %{SEND_RESPONSE_HDR_HOOK}
# cond %{HEADER:X-Cache} ="" [AND]
# cond %{CACHE} ="hit-fresh" [NOT]
# set-header X-Cache MISS
