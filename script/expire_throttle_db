#!/usr/bin/env ruby

# Expire old keys in our Redis database used for rate throttling.
#
# Since these values are incremented, we can't use Redis's auto-expiring keys.
# Instead, this script needs to be called by cron on a regular basis to expire
# old data. It should be called on a daily basis, but it's designed with a bit
# of buffer room if it doesn't.
#
#
# All data is kept for the past 1 week. Data older then that should be expired
# (we expire the entire past week of data just in case this isn't called).

require "rubygems"

# Setup gem bundler for dependencies.
ENV["BUNDLE_GEMFILE"] = File.expand_path("../../Gemfile", __FILE__)
require "bundler"
Bundler.setup

require "redis"

db = Redis.new

expire_start_date = Date.today - 14
expire_end_date = Date.today - 7

# Expire all keys in our one week range.
(expire_start_date..expire_end_date).each do |expire_date|
  expire_date_key = expire_date.strftime("%Y-%m-%d")
  puts "Expiring all data for #{expire_date_key}"

  db.del("*:#{expire_date_key}*")
end
