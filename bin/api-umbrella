#!/usr/bin/env node

var forever = require('forever-monitor'),
    parser = require('nomnom'),
    router = require('../lib/router');

parser.command('run')
  .help('Run the API Umbrella server in the foreground')
  .option('config', {
    abbr: 'c',
    metavar: 'FILE',
    default: ['/etc/api-umbrella/api-umbrella.yml'],
    list: true,
    help: 'Conifg file to use (include multiple times for multiple files)',
  })
  .callback(function(options) {
    router.run(options);
  });

parser.command('start')
  .help('Start the API Umbrella server')
  .option('config', {
    abbr: 'c',
    metavar: 'FILE',
    default: ['/etc/api-umbrella/api-umbrella.yml'],
    list: true,
    help: 'Conifg file to use (include multiple times for multiple files)',
  })
  .callback(function(options) {
    console.info(process.execArgv);
    console.info(__filename);
    var child = new (forever.Monitor)(__filename, {
      max: 5,
      silent: false,
      options: ['run'],
      logFile: '/tmp/blah.log',
      outFile: '/tmp/blah-out.log',
      errFile: '/tmp/blah-err.log',
    });

    child.start();
    //router.start(options);
  });

parser.command('stop')
  .help('Stop the API Umbrella server')
  .option('config', {
    abbr: 'c',
    metavar: 'FILE',
    default: ['/etc/api-umbrella/api-umbrella.yml'],
    list: true,
    help: 'Conifg file to use (include multiple times for multiple files)',
  })
  .callback(function(options) {
    router.stop(options);
  });

parser.command('restart')
  .help('Restart the API Umbrella server')
  .option('config', {
    abbr: 'c',
    metavar: 'FILE',
    default: ['/etc/api-umbrella/api-umbrella.yml'],
    list: true,
    help: 'Conifg file to use (include multiple times for multiple files)',
  })
  .callback(function(options) {
    router.restart(options);
  });

parser.command('reload')
  .help('Reload the configuration of the API Umbrella server')
  .option('config', {
    abbr: 'c',
    metavar: 'FILE',
    default: ['/etc/api-umbrella/api-umbrella.yml'],
    list: true,
    help: 'Conifg file to use (include multiple times for multiple files)',
  })
  .callback(function(options) {
    router.reload(options);
  });

parser.command('status')
  .help('Show the status of the API Umbrella server')
  .option('config', {
    abbr: 'c',
    metavar: 'FILE',
    default: ['/etc/api-umbrella/api-umbrella.yml'],
    list: true,
    help: 'Conifg file to use (include multiple times for multiple files)',
  })
  .callback(function(options) {
    router.status(options);
  });

parser.parse();
