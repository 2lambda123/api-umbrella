#!/bin/bash
set -e
set -x

# Split up the tests between the available CI testing nodes.
#
# Our Rails tests will run on one node. The rest of our gatekeeper and
# integration tests will be split up among the remaining nodes.
#
# See: https://circleci.com/docs/parallel-manual-setup

# Make sure we have at least 2 nodes, or our logic to dedicate one to the Rails
# suite won't leave any nodes for the integration tests.
if [ $CIRCLE_NODE_TOTAL -lt "2" ]; then
  echo "CIRCLE_NODE_TOTAL is expected to be 2 or greater for this parallel testing script to work."
  exit 1
fi

# Run the Rails tests on the first node.
if [ $CIRCLE_NODE_INDEX -eq "0" ]; then
  # Start the version of elasticsearch bundled with API Umbrella.
  nohup bash -c "$(pwd)/ci_cache/build/embedded/bin/elasticsearch &"

  # Run the web-app tests
  cd src/api-umbrella/web-app
  PATH="../../../ci_cache/build/embedded/bin:$PATH" bundle exec rake

# Split the rest of the tests amongst the remaining nodes.
else
  # Subtract 1 from the totals available, since the first is being used only
  # for Rails.
  ((MOCHA_NODE_TOTAL=CIRCLE_NODE_TOTAL-1)) || true
  ((MOCHA_NODE_INDEX=CIRCLE_NODE_INDEX-1)) || true

  # Split the test files into even groups depending on how many nodes are
  # available.
  INDEX=0
  NODE_FILES=()
  for TEST_FILE in $(find ./test/server ./test/integration -name "*.js" | sort); do
    if [ $(($INDEX % $MOCHA_NODE_TOTAL)) -eq $MOCHA_NODE_INDEX ]; then
      NODE_FILES+=" $TEST_FILE"
    fi
    ((INDEX=INDEX+1)) || true
  done

  # Run the integration/gatekeeper tests.
  make test PREFIX="$(pwd)/ci_cache/build" MOCHA_FILES="${NODE_FILES[@]}"
fi

pwd
ls -la test/tmp/
ls -la src/api-umbrella/web-app/spec/reports/
